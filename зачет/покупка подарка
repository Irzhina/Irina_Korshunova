class StopExecution(Exception):
    def __init__(self, code):
        self.code = code

    def _render_traceback_(self):
        print("Exit %s" % self.code)

    def exit(code):
        raise StopExecution(code) 
        
class Buyer:

    default_name = 'No name'
    default_age = 0
    default_money = 0

    def __init__(self, name=default_name, age=default_age, money=default_money):

        self.name = name
        self.age = age
        self.money = money

    def info(self):
        print(f'Осталось денег: {self.money}')


    def default_info():
        print(f'Default Name: {Buyer.default_name}')
        print(f'Default Age: {Buyer.default_age}')
        print(f'Default Money: {Buyer.default_money}')

    def buy_present(self, present, discount):
        price = present.final_price(discount)
        if self.money >= price:
            self.make_deal(present, price)
        else:
            print('Недостаточно средств')


    def make_deal(self, present, price):
        self.money -= price
        self.present = present


class Present:

    def __init__(self, price):
        self.price = price

    def final_price(self, discount):
        final_price = self.price * (100-discount) / 100
        print(f'Цена со скидкой: {final_price}')
        return final_price

    

def check_fl (arg1, arg2):
    arg1= arg2.split(".")
    if not(0<len(arg1)<=2):
        print("Вы ввели не число. ПЕРЕЗАПУСТИТЕ ПРОГРАММУ: ") and exit(1)

    if len(arg1) == 1 and not arg1[0].isdigit() or len(arg1) == 2 and (not arg1[0].isdigit() or not arg1[1].isdigit()):
        print("Вы ввели не число. ПЕРЕЗАПУСТИТЕ ПРОГРАММУ: ") and  exit()
      
        
        
name = input ("Введите ваше имя: ")
age = input ("Введите ваш возраст: ")
money = input ("Введите ваш бюджет: ")


check_fl (terms, money)
money=float(money)

ira = Buyer(name, age, money)

pr= input("Введите цену подарка:")

check_fl (terms, pr)
pr= float(pr)


present = Present(pr)
discount= input ("Введите вашу скидку:")

check_fl(terms, discount)

discount=float(discount)
ira.buy_present (present,discount)
ira.info() 
